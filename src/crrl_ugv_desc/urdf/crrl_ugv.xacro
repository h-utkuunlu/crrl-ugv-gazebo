<?xml version="1.0"?>
<robot name="crrl_ugv" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Properties -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <xacro:property name="chassis_height" value="0.055"/>
  <xacro:property name="chassis_length" value="0.44"/>
  <xacro:property name="chassis_width" value="0.31"/>
  <xacro:property name="chassis_mass" value="10"/>

  <xacro:property name="elec_box_height" value="0.13"/>
  <xacro:property name="elec_box_length" value="0.18"/>
  <xacro:property name="elec_box_width" value="0.31"/>
  <xacro:property name="elec_box_mass" value="2"/>
  
  <xacro:property name="wheel_width" value="0.1"/>
  <xacro:property name="wheel_radius" value="0.085"/>
  <xacro:property name="wheel_mass" value="0.1"/>

  <xacro:property name="front_wheel_pos" value="0.185"/>
  <xacro:property name="center_wheel_pos" value="0"/>
  <xacro:property name="rear_wheel_pos" value="-0.185"/>

  <xacro:property name="camera_size" value="0.02"/>
  <xacro:property name="camera_mass" value="0.1"/>
  <xacro:property name="camera_height" value="${wheel_radius*2-0.025}"/>
  <xacro:property name="camera_baseline" value="0.12"/>

  <xacro:property name="stcam_width" value="${camera_baseline+(camera_size)*2}"/>
  <xacro:property name="stcam_height" value="${camera_size*2}"/>
  <xacro:property name="stcam_depth" value="${camera_size*2}"/>
  
  <xacro:property name="wheel_kp" value="1.0" />
  <xacro:property name="wheel_kd" value="1.0" />
  <xacro:property name="wheel_mu1" value="1" />
  <xacro:property name="wheel_mu2" value="0.5" />
  <xacro:property name="wheel_slip1" value="0.5" />
  <xacro:property name="wheel_slip2" value="0.1" />
  <xacro:property name="wheel_gap" value="0.01" />

  <xacro:property name="imu_xoffset" value="0" />
  <xacro:property name="imu_yoffset" value="0" />
  <xacro:property name="imu_zoffset" value="0" />
  
  <xacro:arg name="gpu" default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)" />

  <!-- File includes -->
  <xacro:include filename="$(find crrl_ugv_desc)/urdf/crrl_ugv.gazebo" />
  <xacro:include filename="$(find crrl_ugv_desc)/urdf/materials.xacro" />
  <xacro:include filename="$(find crrl_ugv_desc)/urdf/macros.xacro" />
  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>

  <!-- Robot Definition -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>

  <link name='base_link'>
    <collision>
      <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
      <geometry>
	<box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
      <geometry>
	<box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <inertial>
      <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
      <mass value="${chassis_mass}"/>
      <box_inertia m="${chassis_mass}" x="${chassis_length}" y="${chassis_width}" z="${chassis_height}"/>
    </inertial>
  </link>

  <link name='elecBox'>
    <collision>
      <origin xyz="${elec_box_length/2-chassis_length/2} 0 ${wheel_radius+chassis_height/2+elec_box_height/2}" rpy="0 0 0"/>
      <geometry>
	<box size="${elec_box_length} ${elec_box_width} ${elec_box_height}"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="${elec_box_length/2-chassis_length/2} 0 ${wheel_radius+chassis_height/2+elec_box_height/2}" rpy="0 0 0"/>
       <geometry>
	<box size="${elec_box_length} ${elec_box_width} ${elec_box_height}"/>
      </geometry>
      <material name="orange"/>
    </visual>
    <inertial>
      <origin xyz="${elec_box_length/2-chassis_length/2} 0 ${wheel_radius+chassis_height/2+elec_box_height/2}" rpy="0 0 0"/>
      <mass value="${elec_box_mass}"/>
      <box_inertia m="${elec_box_mass}" x="${elec_box_length}" y="${elec_box_width}" z="${elec_box_height}"/>
    </inertial>
  </link>

  <joint name="elec_base_link" type="fixed">
    <parent link="base_link"/>
    <child link="elecBox"/>
  </joint>

  <!-- IMU attachment -->
  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.000001" iyz="0" izz="0.0001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
	<box size="0.001 0.001 0.001"/>  <!-- <box size="0.001 0.001 0.001"/> -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
	<box size=".001 .001 .001"/>
      </geometry>
    </collision>
  </link>

  <joint name="imu_joint" type="fixed">
    <axis xyz="1 0 0"/> <!-- 0 1 0 -->
    <origin xyz="${elec_box_length/2-chassis_length/2+imu_xoffset} ${imu_yoffset} ${wheel_radius+chassis_height/2+elec_box_height/2+imu_zoffset}"/>
    <parent link="elecBox"/>
    <child link="imu_link"/>
  </joint>
  
  <!-- VLP-16 to electrical box -->
  <VLP-16 parent="elecBox" name="velodyne" topic="/lidar/velodyne_points" hz="10" samples="440" gpu="${gpu}">
    <origin xyz="${elec_box_length/2-chassis_length/2} 0 ${wheel_radius+chassis_height/2+elec_box_height}" rpy="0 0 0" />
  </VLP-16>


  <!-- Wheels -->
  <wheel lr="leftFwd" tY="1" pos="${front_wheel_pos}" gap="${wheel_gap}"/>
  <wheel lr="leftCt" tY="1" pos="${center_wheel_pos}" gap="${wheel_gap}"/>
  <wheel lr="leftBwd" tY="1" pos="${rear_wheel_pos}" gap="${wheel_gap}"/>

  <wheel lr="rightFwd" tY="-1" pos="${front_wheel_pos}" gap="${wheel_gap*-1}"/>
  <wheel lr="rightCt" tY="-1" pos="${center_wheel_pos}" gap="${wheel_gap*-1}"/>
  <wheel lr="rightBwd" tY="-1" pos="${rear_wheel_pos}" gap="${wheel_gap*-1}"/>


  <!-- Camera(s) -->
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${front_wheel_pos} 0 ${camera_height}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>


  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${stcam_height} ${stcam_width} ${stcam_depth}"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${stcam_height} ${stcam_width} ${stcam_depth}"/>
      </geometry>
      <material name="blue"/>
    </visual>
  </link>

  <joint name="camera_joint_left" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${stcam_depth/2} ${camera_baseline*0.5} 0" rpy="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_link_left"/>
  </joint>

  <joint name="camera_joint_right" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${stcam_depth/2} ${-camera_baseline*0.5} 0" rpy="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_link_right"/>
  </joint>

  <!-- Left Camera -->
  <link name="camera_link_left">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <!-- Right Camera -->
  <link name="camera_link_right">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
	<box size="${camera_size} ${camera_size} ${camera_size}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

</robot>
