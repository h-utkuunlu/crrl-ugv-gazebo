<?xml version="1.0"?>
<robot name="crrl_ugv" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Put here the robot description -->
  <gazebo reference="chassis">
    <material>Gazebo/Grey</material>
  </gazebo>
  <gazebo reference="elecBox">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <updateRate>100.0</updateRate>
      <robotNamespace>/</robotNamespace>
      <leftFrontJoint>leftFwd_wheel_hinge</leftFrontJoint>
      <rightFrontJoint>rightFwd_wheel_hinge</rightFrontJoint>
      <leftRearJoint>leftBwd_wheel_hinge</leftRearJoint>
      <rightRearJoint>rightBwd_wheel_hinge</rightRearJoint>
      <wheelSeparation>${chassis_width+wheel_width+2*wheel_gap}</wheelSeparation>
      <wheelDiameter>${2*wheel_radius}</wheelDiameter>
      <robotBaseFrame>footprint</robotBaseFrame>
      <torque>200</torque>
      <MaxForce>5.0</MaxForce>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <broadcastTF>true</broadcastTF>
      <covariance_x>0.001</covariance_x> <!-- 0.0001 -->
      <covariance_y>0.001</covariance_y> <!-- 0.0001 -->
      <covariance_yaw>0.01</covariance_yaw> <!-- 0.01 -->
    </plugin>
  </gazebo>

  <!-- Left Camera -->
  <gazebo reference="camera_link_left">
    <sensor type="camera" name="camera_left">
      <update_rate>30.0</update_rate>
      <camera name="left_cam">
	<horizontal_fov>1.5708</horizontal_fov>
	<image>
	  <width>1920</width>
	  <height>1080</height>
	  <format>R8G8B8</format>
	</image>
	<clip>
	  <near>0.02</near>
	  <far>300</far>
	</clip>
	<noise>
	  <type>gaussian</type>
	  <!-- Noise is sampled independently per pixel on each frame.
	       That pixel's noise value is added to each of its color
	       channels, which at that point lie in the range [0,1]. -->
	  <mean>0.0</mean>
	  <stddev>0.007</stddev>
	</noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	<alwaysOn>true</alwaysOn>
	<updateRate>0.0</updateRate>
	<cameraName>camera_left</cameraName>
	<imageTopicName>image_raw</imageTopicName>
	<cameraInfoTopicName>camera_info</cameraInfoTopicName>
	<frameName>camera_link_left</frameName>
	<hackBaseline>0.07</hackBaseline>
	<distortionK1>0.0</distortionK1>
	<distortionK2>0.0</distortionK2>
	<distortionK3>0.0</distortionK3>
	<distortionT1>0.0</distortionT1>
	<distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Right Camera -->
  <gazebo reference="camera_link_right">
    <sensor type="camera" name="camera_right">
      <update_rate>30.0</update_rate>
      <camera name="right_cam">
	<horizontal_fov>1.5708</horizontal_fov>
	<image>
	  <width>1920</width>
	  <height>1080</height>
	  <format>R8G8B8</format>
	</image>
	<clip>
	  <near>0.02</near>
	  <far>300</far>
	</clip>
	<noise>
	  <type>gaussian</type>
	  <!-- Noise is sampled independently per pixel on each frame.
	       That pixel's noise value is added to each of its color
	       channels, which at that point lie in the range [0,1]. -->
	  <mean>0.0</mean>
	  <stddev>0.007</stddev>
	</noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
	<alwaysOn>true</alwaysOn>
	<updateRate>0.0</updateRate>
	<cameraName>camera_right</cameraName>
	<imageTopicName>image_raw</imageTopicName>
	<cameraInfoTopicName>camera_info</cameraInfoTopicName>
	<frameName>camera_link_right</frameName>
	<hackBaseline>0.07</hackBaseline>
	<distortionK1>0.0</distortionK1>
	<distortionK2>0.0</distortionK2>
	<distortionK3>0.0</distortionK3>
	<distortionT1>0.0</distortionT1>
	<distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  
</robot>
